{"ast":null,"code":"export default class MovingImage {\n  constructor(image, startTop = 50, startLeft = 50, newTop = 50, newLeft = 50) {\n    this.image = image;\n    this.startTop = startTop;\n    this.startLeft = startLeft;\n    this.newTop = newTop;\n    this.newLeft = newLeft;\n    this.piece = null;\n    this.velocity = .02;\n    this.createPiece();\n    setTimeout(() => {\n      this.destroyPiece();\n    }, 3000);\n  }\n\n  get x() {\n    return parseFloat(getComputedStyle(this.piece).getPropertyValue(\"--x\"));\n  }\n\n  set x(value) {\n    this.piece.style.setProperty(\"--x\", value);\n  }\n\n  set y(value) {\n    this.piece.style.setProperty(\"--y\", value);\n  }\n\n  createPiece() {\n    var piece = document.createElement('img');\n    this.piece = piece;\n    piece.src = this.image;\n    piece.classList.add(\"movingPiece\");\n    piece.setAttribute(\"id\", \"activeAn\");\n    this.x = this.startLeft;\n    this.y = this.startTop;\n    console.log(this.startTop - this.newTop);\n    console.log(this.startLeft - this.newLeft);\n    document.getElementById('root').appendChild(piece);\n    this.move(piece);\n  }\n\n  destroyPiece() {\n    document.getElementById(\"activeAn\").remove();\n  }\n\n  move(piece) {\n    console.log(\"pussy\");\n  }\n\n  update(delta) {\n    console.log(this.direction.x);\n    this.x += this.velocity * delta;\n  } // update(time){\n  //     if(lastTime!=null && playing===true){\n  //         const delta=time-lastTime\n  //     }\n  //     lastTime=time\n  //     window.requestAnimationFrame(update)\n  // }\n\n\n}","map":{"version":3,"sources":["C:/Users/acalo/Desktop/devProjects/ChessFrontDeploy/src/components/MovingImage.js"],"names":["MovingImage","constructor","image","startTop","startLeft","newTop","newLeft","piece","velocity","createPiece","setTimeout","destroyPiece","x","parseFloat","getComputedStyle","getPropertyValue","value","style","setProperty","y","document","createElement","src","classList","add","setAttribute","console","log","getElementById","appendChild","move","remove","update","delta","direction"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAiB;AAC5BC,EAAAA,WAAW,CAACC,KAAD,EAAQC,QAAQ,GAAC,EAAjB,EAAqBC,SAAS,GAAC,EAA/B,EAAmCC,MAAM,GAAC,EAA1C,EAA8CC,OAAO,GAAC,EAAtD,EAAyD;AAChE,SAAKJ,KAAL,GAAWA,KAAX;AACA,SAAKC,QAAL,GAAcA,QAAd;AACA,SAAKC,SAAL,GAAeA,SAAf;AACA,SAAKC,MAAL,GAAYA,MAAZ;AACA,SAAKC,OAAL,GAAaA,OAAb;AACA,SAAKC,KAAL,GAAW,IAAX;AACA,SAAKC,QAAL,GAAc,GAAd;AACA,SAAKC,WAAL;AACAC,IAAAA,UAAU,CAAC,MAAI;AACX,WAAKC,YAAL;AACH,KAFS,EAEP,IAFO,CAAV;AAGH;;AACI,MAADC,CAAC,GAAE;AACH,WAAOC,UAAU,CAACC,gBAAgB,CAAC,KAAKP,KAAN,CAAhB,CAA6BQ,gBAA7B,CAA8C,KAA9C,CAAD,CAAjB;AACH;;AACI,MAADH,CAAC,CAACI,KAAD,EAAO;AACR,SAAKT,KAAL,CAAWU,KAAX,CAAiBC,WAAjB,CAA6B,KAA7B,EAAoCF,KAApC;AACH;;AACI,MAADG,CAAC,CAACH,KAAD,EAAO;AACR,SAAKT,KAAL,CAAWU,KAAX,CAAiBC,WAAjB,CAA6B,KAA7B,EAAoCF,KAApC;AACH;;AACDP,EAAAA,WAAW,GAAE;AACT,QAAIF,KAAK,GAAGa,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACA,SAAKd,KAAL,GAAWA,KAAX;AACAA,IAAAA,KAAK,CAACe,GAAN,GAAU,KAAKpB,KAAf;AACAK,IAAAA,KAAK,CAACgB,SAAN,CAAgBC,GAAhB,CAAoB,aAApB;AACAjB,IAAAA,KAAK,CAACkB,YAAN,CAAmB,IAAnB,EAAyB,UAAzB;AACA,SAAKb,CAAL,GAAO,KAAKR,SAAZ;AACA,SAAKe,CAAL,GAAO,KAAKhB,QAAZ;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxB,QAAL,GAAc,KAAKE,MAA/B;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,SAAL,GAAe,KAAKE,OAAhC;AAEAc,IAAAA,QAAQ,CAACQ,cAAT,CAAwB,MAAxB,EAAgCC,WAAhC,CAA4CtB,KAA5C;AACA,SAAKuB,IAAL,CAAUvB,KAAV;AACH;;AACDI,EAAAA,YAAY,GAAE;AACVS,IAAAA,QAAQ,CAACQ,cAAT,CAAwB,UAAxB,EAAoCG,MAApC;AACH;;AACDD,EAAAA,IAAI,CAACvB,KAAD,EAAO;AACPmB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AACDK,EAAAA,MAAM,CAACC,KAAD,EAAO;AACTP,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,SAAL,CAAetB,CAA3B;AACA,SAAKA,CAAL,IAAU,KAAKJ,QAAL,GAAgByB,KAA1B;AACH,GA9C2B,CA+C5B;AACA;AACA;AACA;AACA;AACA;AACA;;;AArD4B","sourcesContent":["export default class MovingImage{\r\n    constructor(image, startTop=50, startLeft=50, newTop=50, newLeft=50){\r\n        this.image=image;\r\n        this.startTop=startTop;\r\n        this.startLeft=startLeft;\r\n        this.newTop=newTop;\r\n        this.newLeft=newLeft;\r\n        this.piece=null;\r\n        this.velocity=.02;\r\n        this.createPiece();\r\n        setTimeout(()=>{\r\n            this.destroyPiece()\r\n        }, 3000)\r\n    }\r\n    get x(){\r\n        return parseFloat(getComputedStyle(this.piece).getPropertyValue(\"--x\"))\r\n    }\r\n    set x(value){\r\n        this.piece.style.setProperty(\"--x\", value)\r\n    }\r\n    set y(value){\r\n        this.piece.style.setProperty(\"--y\", value)\r\n    }\r\n    createPiece(){\r\n        var piece = document.createElement('img')\r\n        this.piece=piece\r\n        piece.src=this.image\r\n        piece.classList.add(\"movingPiece\");\r\n        piece.setAttribute(\"id\", \"activeAn\");\r\n        this.x=this.startLeft;\r\n        this.y=this.startTop;\r\n        console.log(this.startTop-this.newTop);\r\n        console.log(this.startLeft-this.newLeft);\r\n\r\n        document.getElementById('root').appendChild(piece);\r\n        this.move(piece)\r\n    }\r\n    destroyPiece(){\r\n        document.getElementById(\"activeAn\").remove()\r\n    }\r\n    move(piece){\r\n        console.log(\"pussy\")\r\n    }\r\n    update(delta){\r\n        console.log(this.direction.x)\r\n        this.x += this.velocity * delta\r\n    }\r\n    // update(time){\r\n    //     if(lastTime!=null && playing===true){\r\n    //         const delta=time-lastTime\r\n    //     }\r\n    //     lastTime=time\r\n    //     window.requestAnimationFrame(update)\r\n    // }\r\n}"]},"metadata":{},"sourceType":"module"}