{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acalo\\\\Desktop\\\\devProjects\\\\ChessFrontDeploy\\\\src\\\\components\\\\MovesDisplay.tsx\";\nimport React from 'react';\nimport EngineBut from './Engine';\nimport './Movesdis.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovesDisplay = props => {\n  const nextMove = () => {\n    var nextMve = document.getElementById(\"nextBtn\");\n    nextMve === null || nextMve === void 0 ? void 0 : nextMve.click();\n  };\n\n  const backMove = () => {\n    var backMve = document.getElementById(\"backBtn\");\n    backMve === null || backMve === void 0 ? void 0 : backMve.click();\n  };\n\n  const reset = () => {\n    var rsBtn = document.getElementById(\"boardReset\");\n    rsBtn === null || rsBtn === void 0 ? void 0 : rsBtn.click();\n  };\n\n  const renderMoves = () => {\n    //returns a white move and black move\n    //if index =0 or index is even then that move is white and the next is blacks\n    const moves = props.movesList.map((move, index) => {\n      if ((index === 0 || index % 2 === 0) && move[0] !== \"gameOver\") {\n        //show a hastag next to move if it is checkmate\n        if (props.movesList[index + 1][2] === \"mate\") {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `white_move ${index === props.move - 1 ? \"current_move\" : \"\"}`,\n              children: move[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `black_move ${index + 1 === props.move - 1 ? \"current_move\" : \"\"}`,\n              children: [props.movesList[index + 1][1], \"#\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true);\n        } else if (props.movesList[index][2] === \"mate\") {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `white_move ${index === props.move - 1 ? \"current_move\" : \"\"}`,\n              children: [move[1], \"#\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `black_move ${index + 1 === props.move - 1 ? \"current_move\" : \"\"}`,\n              children: props.movesList[index + 1][1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true);\n        } else if (props.movesList[index + 1][0] === \"gameOver\") {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `white_move ${index === props.move - 1 ? \"current_move\" : \"\"}`,\n              children: [move[0], move[1]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `black_move ${index + 1 === props.move - 1 ? \"current_move\" : \"\"}`,\n              children: props.movesList[index + 1][0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true);\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `white_move ${index === props.move - 1 ? \"current_move\" : \"\"}`,\n            children: [move[0], move[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `black_move ${index + 1 === props.move - 1 ? \"current_move\" : \"\"}`,\n            children: [props.movesList[index + 1][0], props.movesList[index + 1][1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true);\n      }\n\n      return null;\n    });\n    var Counter = 0;\n    let displayMove = moves.map((move, index) => {\n      if (move) {\n        Counter += 1;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"move\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number\",\n            children: [Counter, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), move]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this);\n      }\n    });\n    return displayMove;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movesDisplay\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"MD_head fixed sticky\",\n      children: \"Moves List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moves_display\",\n      children: renderMoves()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(EngineBut, {\n        userMoveEngine: props.userMoveEngine,\n        game: props.movesList,\n        moveNum: props.move\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back_btn MD_btn\",\n          onClick: () => backMove(),\n          children: [\"Move back \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 92\n          }, this), \"( \\u2190 )\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset__button MD_btn\",\n          onClick: () => reset(),\n          children: \"ResetBoard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next_btn MD_btn\",\n          onClick: () => nextMove(),\n          children: [\"Next move\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 91\n          }, this), \"( \\u2192 )\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MovesDisplay;\nexport default MovesDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovesDisplay\");","map":{"version":3,"sources":["C:/Users/acalo/Desktop/devProjects/ChessFrontDeploy/src/components/MovesDisplay.tsx"],"names":["React","EngineBut","MovesDisplay","props","nextMove","nextMve","document","getElementById","click","backMove","backMve","reset","rsBtn","renderMoves","moves","movesList","map","move","index","Counter","displayMove","userMoveEngine"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport EngineBut from './Engine';\r\nimport './Movesdis.css';\r\n\r\n\r\n\r\nconst MovesDisplay = (props: any)=>{\r\n    const nextMove=()=>{\r\n        var nextMve = document.getElementById(\"nextBtn\");\r\n        nextMve?.click();\r\n    }\r\n    const backMove=()=>{\r\n        var backMve = document.getElementById(\"backBtn\");\r\n        backMve?.click();\r\n    }\r\n    const reset=()=>{\r\n        var rsBtn = document.getElementById(\"boardReset\")\r\n        rsBtn?.click()\r\n    }\r\n    const renderMoves=()=>{\r\n        //returns a white move and black move\r\n        //if index =0 or index is even then that move is white and the next is blacks\r\n        const moves= props.movesList.map((move: any, index: number)=>{\r\n            if((index===0 || index%2===0) &&  move[0]!==\"gameOver\"){\r\n                //show a hastag next to move if it is checkmate\r\n                if(props.movesList[index+1][2]===\"mate\"){\r\n                    return( \r\n                        <>\r\n                            <div className={`white_move ${index===props.move-1 ? \"current_move\": \"\"}`}>{move[1]}</div>\r\n                            <div className= {`black_move ${index+1===props.move-1 ? \"current_move\": \"\"}`}>{props.movesList[index+1][1]}#</div>  \r\n                        </>\r\n                    )\r\n                }else if (props.movesList[index][2]===\"mate\"){\r\n                    return( \r\n                        <>\r\n                            <div className={`white_move ${index===props.move-1 ? \"current_move\": \"\"}`}>{move[1]}#</div>\r\n                            <div className= {`black_move ${index+1===props.move-1 ? \"current_move\": \"\"}`}>{props.movesList[index+1][1]}</div>  \r\n                        </>\r\n                    )\r\n                }else if (props.movesList[index+1][0]===\"gameOver\"){\r\n                    return(\r\n                        <>\r\n                            <div className={`white_move ${index===props.move-1 ? \"current_move\": \"\"}`}>{move[0]}{move[1]}</div>\r\n                            <div className= {`black_move ${index+1===props.move-1 ? \"current_move\": \"\"}`}>{props.movesList[index+1][0]}</div>  \r\n                        </>)\r\n                }\r\n                return(\r\n                <>\r\n                    <div className={`white_move ${index===props.move-1 ? \"current_move\": \"\"}`}>{move[0]}{move[1]}</div>\r\n                    <div className= {`black_move ${index+1===props.move-1 ? \"current_move\": \"\"}`}>{props.movesList[index+1][0]}{props.movesList[index+1][1]}</div>  \r\n                </>)\r\n            }            \r\n            return null;\r\n            \r\n        });\r\n        var Counter=0;\r\n\r\n        let displayMove = moves.map((move: any, index: number)=>{\r\n            if(move){\r\n                Counter+=1;\r\n                return(\r\n                        <div className=\"move\">\r\n                            <div className=\"number\">{Counter}. </div>\r\n                            {move}\r\n                        </div>)\r\n                }\r\n            }\r\n            \r\n        )\r\n        return (displayMove);   \r\n     }\r\n\r\n    return(\r\n        <div className=\"movesDisplay\">\r\n            <h2 className=\"MD_head fixed sticky\">Moves List</h2>\r\n            <div className=\"moves_display\">\r\n                {renderMoves()}\r\n            </div>\r\n            <div className=\"buttons\">\r\n                <EngineBut userMoveEngine={props.userMoveEngine} game={props.movesList} moveNum={props.move} />\r\n                <div className=\"btns\">\r\n                    <button className=\"back_btn MD_btn\" onClick={()=>backMove()}>Move back <br/>&#40; &#8592; &#41;</button>\r\n                    <button className=\"reset__button MD_btn\" onClick={()=>reset()}>ResetBoard</button>\r\n                    <button className=\"next_btn MD_btn\" onClick={()=>nextMove()}>Next move<br/>&#40; &#8594; &#41;</button>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        )\r\n}\r\n\r\n\r\nexport default MovesDisplay;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}