{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acalo\\\\Desktop\\\\devProjects\\\\ChessFrontDeploy\\\\src\\\\components\\\\Engine.tsx\";\nimport React from \"react\";\nimport \"./engine.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EngineBut = props => {\n  const getMoveNum = () => {\n    var moveNumber = props.moveNum;\n    var moveList = props.game;\n    var moveListForEngine = [];\n\n    for (var i = 0; i < moveNumber; i++) {\n      if (moveList[i][1] === \"WK\") {\n        moveListForEngine.push(\"e1g1\");\n      } else if (moveList[i][1] === \"BK\") {\n        moveListForEngine.push(\"e8g8\");\n      } else if (moveList[i][1] === \"BQ\") {\n        moveListForEngine.push(\"e8c8\");\n      } else if (moveList[i][1] === \"WQ\") {\n        moveListForEngine.push(\"e1c1\");\n      } else {\n        moveListForEngine.push(moveList[i][0] + moveList[i][1]);\n      }\n    }\n\n    if (props.userMoveEngine.length > 0) {\n      console.log(\"ENGINE CALLED USER MOVES\");\n      console.log(moveListForEngine.join(' '), props.userMoveEngine.join(' '));\n      let GB_param = [];\n\n      if (moveListForEngine.length > 0) {\n        GB_param = moveListForEngine.join(' ') + \" \" + props.userMoveEngine.join(' ');\n      } else {\n        GB_param = props.userMoveEngine.join(' ');\n      }\n\n      getBest(GB_param);\n    } else {\n      console.log(\"ENGINE CALLED NO USER MOVES\");\n      console.log(\"move list engine: \" + moveListForEngine.join(' '));\n      getBest(moveListForEngine.join(' '));\n    }\n  };\n\n  const glowRed = (element1, element2) => {\n    element1.classList.add(\"glowRed\");\n    element2.classList.add(\"glowRed\"); //fixed bug. Since white background image can't just add background color red to it\n\n    setTimeout(function () {\n      element1.classList.remove(\"glowRed\");\n      element2.classList.remove(\"glowRed\");\n    }, 1000);\n  };\n\n  const getBest = movesListicle => {\n    if (movesListicle) {\n      var bestMove = \"\";\n      fetch(\"https://calo-chess-backend.herokuapp.com/\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          \"moves\": movesListicle\n        })\n      }).then(response => response.json()).then(body => {\n        bestMove = body.bm;\n        console.log(\"best move in then: \" + bestMove);\n        var bmOldSquare = bestMove.slice(0, 2);\n        var bmNewSquare = bestMove.slice(2, 4);\n        var oldSquare = document.getElementById(bmOldSquare);\n        var newSquare = document.getElementById(bmNewSquare);\n        glowRed(oldSquare, newSquare);\n      }).catch(err => {\n        console.log(\"error: \" + err);\n      });\n    } else {\n      var oldSquare = document.getElementById(\"e2\");\n      var newSquare = document.getElementById(\"e4\");\n      glowRed(oldSquare, newSquare);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"engine\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: () => {\n        getMoveNum();\n      },\n      children: \"What would the engine play?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EngineBut;\nexport default EngineBut;\n\nvar _c;\n\n$RefreshReg$(_c, \"EngineBut\");","map":{"version":3,"sources":["C:/Users/acalo/Desktop/devProjects/ChessFrontDeploy/src/components/Engine.tsx"],"names":["React","EngineBut","props","getMoveNum","moveNumber","moveNum","moveList","game","moveListForEngine","i","push","userMoveEngine","length","console","log","join","GB_param","getBest","glowRed","element1","element2","classList","add","setTimeout","remove","movesListicle","bestMove","fetch","method","headers","body","JSON","stringify","then","response","json","bm","bmOldSquare","slice","bmNewSquare","oldSquare","document","getElementById","newSquare","catch","err"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./engine.css\"\r\n\r\nconst EngineBut = (props)=>{\r\n\r\n    const getMoveNum=()=>{\r\n        var moveNumber=props.moveNum;\r\n        var moveList: any = props.game;\r\n        var moveListForEngine:any = [];\r\n        for(var i=0; i<moveNumber; i++){\r\n            if(moveList[i][1]===\"WK\"){\r\n                moveListForEngine.push(\"e1g1\");\r\n            }else if(moveList[i][1]===\"BK\"){\r\n                moveListForEngine.push(\"e8g8\");\r\n            }else if (moveList[i][1]===\"BQ\"){\r\n                moveListForEngine.push(\"e8c8\");\r\n            }else if (moveList[i][1]===\"WQ\"){\r\n                moveListForEngine.push(\"e1c1\");\r\n            }else{\r\n                moveListForEngine.push(moveList[i][0] + moveList[i][1]);\r\n            }\r\n        }\r\n        if(props.userMoveEngine.length>0){\r\n            console.log(\"ENGINE CALLED USER MOVES\")\r\n            console.log(moveListForEngine.join(' '), props.userMoveEngine.join(' '));\r\n            let GB_param:any = [];\r\n            if(moveListForEngine.length>0){\r\n                GB_param = (moveListForEngine.join(' ') + \" \" + props.userMoveEngine.join(' '));\r\n            }else{\r\n                GB_param = (props.userMoveEngine.join(' '));\r\n            }\r\n            getBest(GB_param);\r\n        }else{\r\n            console.log(\"ENGINE CALLED NO USER MOVES\")\r\n            console.log(\"move list engine: \" + moveListForEngine.join(' '));\r\n            getBest(moveListForEngine.join(' '));            \r\n        }\r\n        \r\n    }\r\n    const glowRed=(element1: any, element2: any)=>{        \r\n        element1.classList.add(\"glowRed\");\r\n        element2.classList.add(\"glowRed\");\r\n        //fixed bug. Since white background image can't just add background color red to it\r\n        setTimeout(function(){\r\n            element1.classList.remove(\"glowRed\");\r\n            element2.classList.remove(\"glowRed\");\r\n       },1000);\r\n    }\r\n    const getBest=(movesListicle: string)=>{\r\n        if(movesListicle){\r\n            var bestMove =\"\" \r\n            fetch(\"https://calo-chess-backend.herokuapp.com/\", {\r\n                    method: \"POST\",\r\n                    headers: {'Content-Type': 'application/json',\r\n                                'Accept': 'application/json'},\r\n                    body: JSON.stringify({ \"moves\": movesListicle})\r\n                })\r\n                .then((response)=>response.json())\r\n                .then(body=> {\r\n                    bestMove=body.bm;\r\n                    console.log(\"best move in then: \" + bestMove);\r\n                    var bmOldSquare = bestMove.slice(0,2);\r\n                    var bmNewSquare = bestMove.slice(2,4);\r\n                    var oldSquare= document.getElementById(bmOldSquare);\r\n                    var newSquare= document.getElementById(bmNewSquare);\r\n                    glowRed(oldSquare, newSquare);\r\n                })\r\n                .catch((err)=>{console.log(\"error: \" + err);})\r\n            }else{\r\n                var oldSquare= document.getElementById(\"e2\");\r\n                var newSquare= document.getElementById(\"e4\");\r\n                glowRed(oldSquare, newSquare);\r\n            }\r\n        }\r\n\r\n    return(\r\n    <div className=\"engine\"> \r\n        <button type=\"submit\" onClick={()=>{getMoveNum()}}>What would the engine play?</button>\r\n    </div>)    \r\n\r\n}\r\n\r\nexport default EngineBut;\r\n    \r\n    \r\n"]},"metadata":{},"sourceType":"module"}