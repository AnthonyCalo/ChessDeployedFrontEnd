{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acalo\\\\Desktop\\\\devProjects\\\\ChessFrontDeploy\\\\src\\\\components\\\\square.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./square.css\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square({\n  number,\n  image,\n  sText\n}) {\n  _s();\n\n  //goes back forth on black white squares\n  //adds the class of chesspiece and the background image if there is a piece on the square\n  //we can tell by whether or not an image for a piece is added to square\n  var label = \"\";\n  let labelClass = \"\";\n  const [secondLabel, setSecond] = useState(false);\n\n  const renderSecondLabel = () => {\n    if (secondLabel) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottomLabel\",\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this);\n    } else {\n      return '';\n    }\n  };\n\n  if (sText[0] === \"a\") {\n    if (sText[1] === \"1\") {\n      setSecond(true);\n    }\n\n    label = sText[1];\n  } else if (sText[1] === \"1\") {\n    label = sText[0];\n    labelClass = \"bottomLabel\";\n  }\n\n  if (number % 2 === 0) {\n    if (image !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"black-square square\",\n        id: sText,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: labelClass,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chess-piece\",\n          style: {\n            backgroundImage: `url(${image})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), renderSecondLabel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"black-square square\",\n        id: sText,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: labelClass,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), renderSecondLabel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this);\n    }\n  } else {\n    if (image !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"white-square square\",\n        id: sText,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: labelClass,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chess-piece\",\n          style: {\n            backgroundImage: `url(${image})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"white-square square\",\n        id: sText,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: labelClass,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\n\n_s(Square, \"cb1aBeHjY/Xtk/x9ca95uiiyZmA=\");\n\n_c = Square;\nexport default Square;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/acalo/Desktop/devProjects/ChessFrontDeploy/src/components/square.tsx"],"names":["React","useState","Square","number","image","sText","label","labelClass","secondLabel","setSecond","renderSecondLabel","backgroundImage"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAQA,SAASC,MAAT,CAAgB;AAACC,EAAAA,MAAD;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAhB,EAA8C;AAAA;;AAC1C;AACA;AACA;AACA,MAAIC,KAAK,GAAC,EAAV;AACA,MAAIC,UAAU,GAAC,EAAf;AACA,QAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BR,QAAQ,CAAC,KAAD,CAAzC;;AACA,QAAMS,iBAAiB,GAAC,MAAI;AACxB,QAAGF,WAAH,EAAe;AACX,0BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAIK;AACD,aAAS,EAAT;AACH;AACJ,GARD;;AASA,MAAGH,KAAK,CAAC,CAAD,CAAL,KAAW,GAAd,EAAkB;AACd,QAAGA,KAAK,CAAC,CAAD,CAAL,KAAW,GAAd,EAAkB;AACdI,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AACDH,IAAAA,KAAK,GAACD,KAAK,CAAC,CAAD,CAAX;AACH,GALD,MAMK,IAAGA,KAAK,CAAC,CAAD,CAAL,KAAW,GAAd,EAAkB;AACnBC,IAAAA,KAAK,GAACD,KAAK,CAAC,CAAD,CAAX;AACAE,IAAAA,UAAU,GAAC,aAAX;AACH;;AACD,MAAGJ,MAAM,GAAC,CAAP,KAAW,CAAd,EAAgB;AACZ,QAAGC,KAAK,KAAG,EAAX,EAAc;AACV,0BACI;AAAK,QAAA,SAAS,EAAE,qBAAhB;AAAuC,QAAA,EAAE,EAAEC,KAA3C;AAAA,gCAAmD;AAAK,UAAA,SAAS,EAAEE,UAAhB;AAAA,oBAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAAnD,eACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAE;AAACK,YAAAA,eAAe,EAAG,OAAMP,KAAM;AAA/B;AAApC;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKM,iBAAiB,EAFtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND,MAOI;AACJ,0BACI;AAAK,QAAA,SAAS,EAAE,qBAAhB;AAAuC,QAAA,EAAE,EAAEL,KAA3C;AAAA,gCACI;AAAK,UAAA,SAAS,EAAEE,UAAhB;AAAA,oBAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKI,iBAAiB,EAFtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMC;AACJ,GAhBD,MAiBI;AACA,QAAGN,KAAK,KAAG,EAAX,EAAc;AACV,0BACI;AAAK,QAAA,SAAS,EAAE,qBAAhB;AAAuC,QAAA,EAAE,EAAEC,KAA3C;AAAA,gCAAmD;AAAK,UAAA,SAAS,EAAEE,UAAhB;AAAA,oBAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAAnD,eACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAE;AAACK,YAAAA,eAAe,EAAG,OAAMP,KAAM;AAA/B;AAApC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAIY,KALhB,MAMI;AACA,0BACI;AAAK,QAAA,SAAS,EAAE,qBAAhB;AAAuC,QAAA,EAAE,EAAEC,KAA3C;AAAA,+BACA;AAAK,UAAA,SAAS,EAAEE,UAAhB;AAAA,oBAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACA;AACR;;GAxDQJ,M;;KAAAA,M;AA0DT,eAAeA,MAAf","sourcesContent":["import \"./square.css\";\r\nimport React, {useState} from 'react'\r\n\r\ninterface Props{\r\n    number: number;\r\n    image: string;\r\n    sText: string;\r\n}\r\n\r\nfunction Square({number, image, sText}: Props){\r\n    //goes back forth on black white squares\r\n    //adds the class of chesspiece and the background image if there is a piece on the square\r\n    //we can tell by whether or not an image for a piece is added to square\r\n    var label=\"\";\r\n    let labelClass=\"\"\r\n    const [secondLabel, setSecond] = useState(false);\r\n    const renderSecondLabel=()=>{\r\n        if(secondLabel){\r\n            return(\r\n                <div className=\"bottomLabel\">a</div>\r\n            )\r\n        }else{\r\n            return ( '')\r\n        }\r\n    }\r\n    if(sText[0]===\"a\"){\r\n        if(sText[1]===\"1\"){\r\n            setSecond(true)\r\n        }\r\n        label=sText[1]\r\n    }\r\n    else if(sText[1]===\"1\"){\r\n        label=sText[0]\r\n        labelClass=\"bottomLabel\"\r\n    } \r\n    if(number%2===0){\r\n        if(image!==\"\"){\r\n            return(\r\n                <div className={\"black-square square\"} id={sText} ><div className={labelClass}>{label}</div>\r\n                    <div className=\"chess-piece\" style={{backgroundImage: `url(${image})`}}></div>\r\n                    {renderSecondLabel()}\r\n                </div>)\r\n        }\r\n        else{\r\n        return(\r\n            <div className={\"black-square square\"} id={sText} >\r\n                <div className={labelClass}>{label}</div>\r\n                {renderSecondLabel()}\r\n\r\n            </div>)       \r\n        }\r\n    }\r\n    else{  \r\n        if(image!==\"\"){  \r\n            return(\r\n                <div className={\"white-square square\"} id={sText} ><div className={labelClass}>{label}</div>\r\n                    <div className=\"chess-piece\" style={{backgroundImage: `url(${image})`}}></div>\r\n\r\n                </div>)}\r\n        else{\r\n            return(\r\n                <div className={\"white-square square\"} id={sText} >\r\n                <div className={labelClass}>{label}</div></div>) \r\n        }\r\n        }\r\n}\r\n\r\nexport default Square\r\n\r\n"]},"metadata":{},"sourceType":"module"}