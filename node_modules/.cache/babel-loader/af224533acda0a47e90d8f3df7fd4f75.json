{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acalo\\\\Desktop\\\\devProjects\\\\ChessFrontDeploy\\\\src\\\\components\\\\GamePage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Header from \"./Header\";\nimport ChessBoardMovesAlready from './ChessBoard';\nimport { WhitePlayerImg, BlackPlayerImg } from './PlayerImg';\nimport Description from './Description';\nimport MovesDisplay from './MovesDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Game = props => {\n  _s();\n\n  //both use state hooks are being used to pass info from the chessboard component to the engine\n  const [moveCount, setMoveCount] = useState(0);\n  const [userMoveEngine, setUserMoveEngine] = useState([]);\n\n  const setMove = moveNum => {\n    setMoveCount(moveNum);\n  };\n\n  const passToEngine = moves => {\n    if (moves.length === 0 && userMoveEngine.length === 0) {\n      return;\n    } else {\n      setUserMoveEngine(moves);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contaniggeer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftSide\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blankSpace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BlackPlayerImg, {\n          alt: props.blackName,\n          blackPlayer: props.blackImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(WhitePlayerImg, {\n          alt: props.whiteName,\n          whitePlayer: props.whiteImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Description, {\n          description: props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middleBoard\",\n        children: /*#__PURE__*/_jsxDEV(ChessBoardMovesAlready, {\n          passToEngine: passToEngine,\n          setMove: setMove,\n          movesList: props.movesList,\n          gameover: props.gameOver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightSide\",\n        children: /*#__PURE__*/_jsxDEV(MovesDisplay, {\n          userMoveEngine: userMoveEngine,\n          move: moveCount,\n          movesList: props.movesList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Game, \"sG6V6N5rr0oKdaVqQCraGGMeWnE=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/acalo/Desktop/devProjects/ChessFrontDeploy/src/components/GamePage.tsx"],"names":["React","useState","Header","ChessBoardMovesAlready","WhitePlayerImg","BlackPlayerImg","Description","MovesDisplay","Game","props","moveCount","setMoveCount","userMoveEngine","setUserMoveEngine","setMove","moveNum","passToEngine","moves","length","title","blackName","blackImg","whiteName","whiteImg","description","movesList","gameOver"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,sBAAP,MAAmC,cAAnC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,aAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAIA,MAAMC,IAAI,GAAEC,KAAD,IAAS;AAAA;;AACd;AACJ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAW,EAAX,CAApD;;AACA,QAAMa,OAAO,GAAIC,OAAD,IAAiB;AAC/BJ,IAAAA,YAAY,CAACI,OAAD,CAAZ;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAEC,KAAD,IAAS;AAC1B,QAAGA,KAAK,CAACC,MAAN,KAAiB,CAAjB,IAAsBN,cAAc,CAACM,MAAf,KAA0B,CAAnD,EAAqD;AACnD;AACD,KAFD,MAEK;AACHL,MAAAA,iBAAiB,CAACI,KAAD,CAAjB;AACD;AAEF,GAPD;;AAQE,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAER,KAAK,CAACU;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,cAAD;AAAgB,UAAA,GAAG,EAAEV,KAAK,CAACW,SAA3B;AAAsC,UAAA,WAAW,EAAEX,KAAK,CAACY;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,cAAD;AAAgB,UAAA,GAAG,EAAEZ,KAAK,CAACa,SAA3B;AAAsC,UAAA,WAAW,EAAEb,KAAK,CAACc;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,WAAD;AAAa,UAAA,WAAW,EAAEd,KAAK,CAACe;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAOA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI,QAAC,sBAAD;AAAyB,UAAA,YAAY,EAAER,YAAvC;AAAqD,UAAA,OAAO,EAAEF,OAA9D;AAAuE,UAAA,SAAS,EAAEL,KAAK,CAACgB,SAAxF;AAAmG,UAAA,QAAQ,EAAEhB,KAAK,CAACiB;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPA,eAUA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,cAAc,EAAEd,cAA9B;AAA8C,UAAA,IAAI,EAAEF,SAApD;AAA+D,UAAA,SAAS,EAAED,KAAK,CAACgB;AAAhF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAmBH,CAlCD;;GAAMjB,I;;KAAAA,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Header from \"./Header\";\r\nimport ChessBoardMovesAlready from './ChessBoard';\r\nimport { WhitePlayerImg, BlackPlayerImg } from './PlayerImg';\r\nimport Description from './Description';\r\nimport MovesDisplay from './MovesDisplay';\r\n\r\n\r\n\r\nconst Game=(props)=>{\r\n      //both use state hooks are being used to pass info from the chessboard component to the engine\r\n  const [moveCount, setMoveCount] = useState(0);\r\n  const [userMoveEngine, setUserMoveEngine] = useState<String[]>([]);\r\n  const setMove = (moveNum: any) =>{\r\n    setMoveCount(moveNum)\r\n  }\r\n  const passToEngine=(moves)=>{\r\n    if(moves.length === 0 && userMoveEngine.length === 0){\r\n      return;\r\n    }else{\r\n      setUserMoveEngine(moves);\r\n    }\r\n    \r\n  }\r\n    return(\r\n        <>\r\n            <Header title={props.title} />\r\n            <div className=\"contaniggeer\">\r\n            <div className=\"leftSide\">\r\n                <div className=\"blankSpace\"></div>\r\n                <BlackPlayerImg alt={props.blackName} blackPlayer={props.blackImg} />\r\n                <WhitePlayerImg alt={props.whiteName} whitePlayer={props.whiteImg} />\r\n                <Description description={props.description} />\r\n            </div>\r\n            <div className=\"middleBoard\">\r\n                <ChessBoardMovesAlready  passToEngine={passToEngine} setMove={setMove} movesList={props.movesList} gameover={props.gameOver}/>\r\n            </div>\r\n            <div className=\"rightSide\">\r\n                <MovesDisplay userMoveEngine={userMoveEngine} move={moveCount} movesList={props.movesList}/>\r\n            </div>\r\n            </div>\r\n        </>\r\n        )\r\n}\r\nexport default Game;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}